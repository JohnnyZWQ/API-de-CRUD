1. O que √© a anota√ß√£o `@SpringBootApplication`?  
√â uma combina√ß√£o de `@Configuration`, `@EnableAutoConfiguration` e `@ComponentScan`. 
Diz ao Spring para configurar a aplica√ß√£o automaticamente.

2. Para que serve o m√©todo `main()` na classe principal?  
Inicia a aplica√ß√£o com `SpringApplication.run()`.

3. Para que serve a anota√ß√£o `@Entity`?  
Marca uma classe como uma entidade que ser√° mapeada para uma tabela no banco.

4. O que significa `@GeneratedValue(generator = "UUID")`?  
Gera automaticamente um ID √∫nico do tipo UUID para o campo anotado com `@Id`.

5. O que √© o `UserModel` e o `JogoModel`?  
S√£o entidades JPA que representam as tabelas `tb_usuario` e `tb_jogos`.

6. O que √© `JpaRepository`?  
√â uma interface do Spring Data que fornece m√©todos prontos para acessar o banco, como `findAll()`, `save()`, `deleteById()`.

7. O que faz o m√©todo `findByname(String name)`?  
Busca um usu√°rio pelo nome, usando uma consulta personalizada baseada no nome do campo.

8. Para que serve a anota√ß√£o `@RestController`?  
Transforma a classe em um controlador REST, retornando os dados no formato JSON.

9. Qual a diferen√ßa entre `@PostMapping`, `@GetMapping`, `@PutMapping` e `@DeleteMapping`?  
- `@PostMapping`: Envia dados para cria√ß√£o (POST)
- `@GetMapping`: Busca informa√ß√µes (GET)
- `@PutMapping`: Atualiza√ß√£o (PUT)
- `@DeleteMapping`: Exclus√£o (DELETE)

10. O que √© o BCrypt?  
√â uma biblioteca para criptografar senhas com seguran√ßa.

11. O que faz a classe `FilterAuth`?  
Intercepta requisi√ß√µes no endpoint definido e verifica se o usu√°rio est√° autenticado via cabe√ßalho `Authorization`.

12.O que significa HttpStatus.OK (200)?

üîπ 200 OK = Requisi√ß√£o bem-sucedida

13. O que significa `HttpStatus.BAD_REQUEST` (400)?  
Erro na requisi√ß√£o, como quando o usu√°rio j√° existe.

14. O que significa `response.sendError(401, ...)`?  
Rejeita a requisi√ß√£o por falha na autentica√ß√£o (usu√°rio ou senha incorreta).  

15. O que √© o H2 Database?  
O H2 √© um banco de dados em mem√≥ria usado para testes em aplica√ß√µes Spring Boot.  

16. O que √© JPA?  
JPA (Java Persistence API) √© uma especifica√ß√£o do Java para trabalhar com banco de dados usando objetos Java.

17. O que √© o Maven?  
Maven √© um gerenciador de depend√™ncias. 
Ele usa um arquivo `pom.xml` para definir quais bibliotecas ser√£o baixadas automaticamente.  

18. O que o `HttpServletRequest` faz?  
Ele cont√©m informa√ß√µes da requisi√ß√£o HTTP, como headers, corpo e par√¢metros.  

19. O que o `HttpServletResponse` faz?  
Ele representa a resposta do servidor, permitindo definir status HTTP, headers e corpo da resposta.  

20. O que o `BCrypt` faz?  
BCrypt √© um algoritmo para criptografar senhas de forma segura.

POSTMAN

21. O que √© o Postman e para que ele √© utilizado?  
O Postman √© uma ferramenta usada para testar APIs REST, 
permitindo enviar requisi√ß√µes HTTP (GET, POST, PUT, DELETE) e visualizar as respostas.  

22. Como enviar um corpo (`body`) em uma requisi√ß√£o POST no Postman?  

{
  "name": "Jo√£o",
  "email": "joao@email.com",
  "password": "123456"
}